{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","xmlns","width","height","fill","viewBox","style","backgroundColor","color","d","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45535a16.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-journal-text mx-3\" viewBox=\"0 0 16 16\" style={{backgroundColor: props.mode==='dark'?'#1c1b1b':'white',color: props.mode==='dark'?'white':'#060038'}}>\r\n  <path fill-rule=\"evenodd\" d=\"M0 .5A.5.5 0 0 1 .5 0h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 0 .5Zm0 2A.5.5 0 0 1 .5 2h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Zm9 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm-9 2A.5.5 0 0 1 .5 4h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Zm5 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm7 0a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Zm-12 2A.5.5 0 0 1 .5 6h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5Zm8 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm-8 2A.5.5 0 0 1 .5 8h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm7 0a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Zm-7 2a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5Z\"/>\r\n</svg>\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a  className=\"nav-link active text-primary\" aria-current=\"page\" href=\"# \">Home</a >\r\n        </li>\r\n        {/*\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link text-primary\" to=\"/about\">About</Link>\r\n        </li>*/}\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n       <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabled DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string\r\n}\r\nNavbar.defaultProps ={\r\n    title:'Set title here',\r\n    aboutText:'About'\r\n};","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import  './App.css';\r\n//import About from './Components/About';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport React, { useState } from 'react'\r\nimport Alert from './Components/Alert';\r\n/*import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";*/\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not \r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message,type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode==='light'){\r\n    setMode('dark');\r\n    document.body.style.backgroundColor = '#060038';\r\n     showAlert(\"Dark mode has been enabled\",\"Success\");\r\n     document.title = \"Text App - Dark Mode\"\r\n\r\n     /*setInterval(() => {\r\n      document.title = \"Text App is Amazing Mode\"\r\n     }, 2000);\r\n\r\n     setInterval(() => {\r\n      document.title = \"Install Text App Now\"\r\n     }, 1500);*/\r\n  }\r\n    else{\r\n    setMode('light');\r\n    document.body.style.backgroundColor = 'white';\r\n    showAlert(\"Light mode has been enabled\",\"Success\");\r\n    document.title = \"Text App - Light Mode\"\r\n  }\r\n  }\r\n  return(\r\n    <>\r\n  {/*<Router>*/}\r\n    <Navbar title=\"Text Apps\" mode={mode} toggleMode={toggleMode}/>\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\">\r\n    {/*<Switch>*/}\r\n      {/*  /Users --> Component -1 \r\n          /users/home --> Component -2 \r\n          In this condition react will use partial matching and we can't get 2nd component that why we use exact word in path \r\n          */}\r\n          {/*<Route exact path=\"/about\">\r\n            <About mode={mode} toggleMode={toggleMode} />\r\n          </Route>\r\n        <Route exact path=\"/\">*/}\r\n              <TextForm  showAlert={showAlert} heading=\"Enter The Text To Analyze Below:-\" mode={mode}/>\r\n          {/*</Route>\r\n    </Switch>*/}\r\n   </div>\r\n  { /*</Router>*/}\r\n   </>  \r\n   );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}