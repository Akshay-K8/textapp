{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","xmlns","width","height","fill","viewBox","style","backgroundColor","color","d","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alerts","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e9ed439.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-journal-text mx-3\" viewBox=\"0 0 16 16\" style={{backgroundColor: props.mode==='dark'?'#1c1b1b':'white',color: props.mode==='dark'?'white':'#060038'}}>\r\n  <path fill-rule=\"evenodd\" d=\"M0 .5A.5.5 0 0 1 .5 0h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 0 .5Zm0 2A.5.5 0 0 1 .5 2h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Zm9 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm-9 2A.5.5 0 0 1 .5 4h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Zm5 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm7 0a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Zm-12 2A.5.5 0 0 1 .5 6h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5Zm8 0a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm-8 2A.5.5 0 0 1 .5 8h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Zm7 0a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Zm-7 2a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1h-8a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5Z\"/>\r\n</svg>\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active text-primary\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n      { /* <li className=\"nav-item\">\r\n          <a className=\"nav-link text-primary\" href=\"/about\">About</a>\r\n    </li>*/}\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n       <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enabled DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string\r\n}\r\nNavbar.defaultProps ={\r\n    title:'Set title here',\r\n    aboutText:'About'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was Clicked\"+text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\",\"Success\")\r\n    }\r\n    \r\n    const handleLoClick = ()=>{\r\n        //console.log(\"Uppercase was Clicked\"+text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase!\",\"Success\")\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        //console.log(\"On Clicked\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"Container\"style={{color:props.mode==='dark'?'white':'#060038'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color: props.mode==='dark'?'white':'#060038'}} id=\"myBox\" rows=\"8\" placeholder=\"Enter The Text Here...\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\"onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\"onClick={handleLoClick}>Convert to Lowercase</button>\r\n        </div>\r\n        <div className=\"container my-4 \" style={{color: props.mode==='dark'?'white':'#060038'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters </p>\r\n            <p>{0.008*text.split(\" \").length} Minutes to Read  </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text box here to preview it here\"}</p>\r\n        </div>\r\n         </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alerts(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\" style={{backgroundColor: props.mode=='dark'?'grey':'lightblue'}} >\r\n                        <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n                            \r\n                    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import  './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alerts from './Components/Alerts';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n*/\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#060038';\n     showAlert(\"Dark mode has been enabled\",\"Success\");\n     document.title = \"Text App - Dark Mode\"\n\n     /*setInterval(() => {\n      document.title = \"Text App is Amazing Mode\"\n     }, 2000);\n\n     setInterval(() => {\n      document.title = \"Install Text App Now\"\n     }, 1500);*/\n  }\n    else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\",\"Success\");\n    document.title = \"Text App - Light Mode\"\n  }\n  }\n  return(\n    <>\n  {/*<Router>*/}\n    <Navbar title=\"Text Apps\" mode={mode} toggleMode={toggleMode}/>\n    <Alerts alert={alert}/>\n    <div className=\"container my-3\">\n    {/*<Switch>*/}\n      {/*  /Users --> Component -1 \n          /users/home --> Component -2 \n          In this condition react will use partial matching and we can't get 2nd component that why we use exact word in path \n          */}\n          {/*<Route exact path=\"/about\">\n            <About mode={mode} toggleMode={toggleMode} />\n          </Route>\n        <Route exact path=\"/\">*/}\n              <TextForm  showAlert={showAlert} heading=\"Enter The Text To Analyze Below:-\" mode={mode}/>\n          {/*</Route>*/}\n    {/*</Switch>*/}\n   </div>\n  {/* </Router>*/}\n   </>  \n   );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}